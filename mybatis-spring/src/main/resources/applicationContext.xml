<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

    <!--引入外部数据库配置-->
    <context:property-placeholder location="classpath:db.properties"/>


    <!--配置连接池 C3P0-->
    <bean id="dataSource"
          class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass">
            <value>${jdbc.driver}</value>
        </property>
        <property name="jdbcUrl">
            <value>${jdbc.url}</value>
        </property>
        <property name="user">
            <value>${jdbc.user}</value>
        </property>
        <property name="password">
            <value>${jdbc.password}</value>
        </property>
    </bean>

    <!--配置SqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--配置mybatis核心配置文件-->
        <property name="configLocation" value="classpath:sqlMapConfig.xml"/>
        <!--配置数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--使用原始DAO进行对数据库的操作-->
    <!--<bean id="userDao" class="com.gaole.mybatis.spring.mapper.impl.UserDaoImpl">-->
    <!--<property name="sqlSessionFactory" ref="sqlSessionFactory"/>-->
    <!--</bean>-->

    <!--配置Mapper代理的方式开发一-->
    <!--<bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">-->
    <!--<property name="sqlSessionFactory" ref="sqlSessionFactory"/>-->
    <!--<property name="mapperInterface" value="com.gaole.mybatis.spring.mapper.UserMapper"/>-->
    <!--</bean>-->

    <!--Mapper代理的方式开发二,扫描包的方式配置代理-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--配置基本包即可,会自动扫描包下的Mapper接口,并给该接口创建实现类-->
        <property name="basePackage" value="com.gaole.mybatis.spring.mapper"/>
    </bean>
</beans>
